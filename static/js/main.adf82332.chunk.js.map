{"version":3,"sources":["redux/contacts/items/items-actions.js","redux/contacts/items/items-operations.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","redux/contacts/items/items-reducers.js","redux/contacts/filter/filter-actions.js","redux/contacts/filter/filter-reducers.js","redux/contacts/contacts-reducers.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Message/Message.jsx","components/LoaderModal/Modal/Modal.jsx","components/Loader/Loader.jsx","components/LoaderModal/LoaderModal.jsx","App.jsx","redux/store.js","index.js"],"names":["addContactRequest","createAction","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","getContactRequest","getContactSuccess","getContactError","axios","defaults","baseURL","INITIAL_STATE","name","number","ContactForm","state","nameId","nanoid","numberId","reset","setState","onInputHandler","target","value","addContact","contactData","props","info","text","delay","onSubmitHandler","event","preventDefault","contacts","find","item","id","className","onSubmit","this","htmlFor","type","pattern","title","required","onChange","Component","connect","items","dispatch","contact","data","post","then","catch","error","ContactItem","deleteContact","onClick","createReducer","payload","filter","element","_","loading","changeFilter","combineReducers","filterContacts","query","toLocaleLowerCase","includes","delete","console","log","getContactList","get","useEffect","map","filterId","filteredContacts","length","modalRef","document","querySelector","Modal","createPortal","children","Loader","height","width","color","arialLabel","LoaderModal","App","rootReducer","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.adf82332.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nexport const addContactRequest = createAction(\"contacts/addRequest\");\nexport const addContactSuccess = createAction(\"contacts/addSuccess\");\nexport const addContactError = createAction(\"contacts/addError\");\n\nexport const deleteContactRequest = createAction(\"contacts/deleteRequest\");\nexport const deleteContactSuccess = createAction(\"contacts/deleteSuccess\");\nexport const deleteContactError = createAction(\"contacts/deleteError\");\n\nexport const getContactRequest = createAction(\"contacts/getRequest\");\nexport const getContactSuccess = createAction(\"contacts/getSuccess\");\nexport const getContactError = createAction(\"contacts/getError\");\n","import axios from \"axios\";\n\nimport {\n  addContactRequest,\n  addContactError,\n  addContactSuccess,\n  deleteContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  getContactError,\n  getContactRequest,\n  getContactSuccess,\n} from \"./items-actions\";\n\naxios.defaults.baseURL = \"https://61fb905c87801d0017a2c5b6.mockapi.io\";\n\nexport const getContact = () => (dispatch) => {\n  dispatch(getContactRequest());\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => {\n      dispatch(getContactSuccess(data));\n    })\n    .catch((error) => dispatch(getContactError(error)));\n};\n\nexport const addContact = (data) => (dispatch) => {\n  dispatch(addContactRequest());\n  axios\n    .post(\"/contacts\", data)\n    .then(({ data }) => {\n      dispatch(addContactSuccess(data));\n    })\n    .catch((error) => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = (id) => (dispatch) => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(({ data }) => {\n      dispatch(deleteContactSuccess(id));\n      console.log(data);\n    })\n    .catch((error) => dispatch(deleteContactError(error)));\n};\n","import \"./ContactForm.scss\";\nimport { nanoid } from \"nanoid\";\nimport { info } from \"@pnotify/core\";\nimport \"@pnotify/core/dist/PNotify.css\";\nimport \"@pnotify/core/dist/BrightTheme.css\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addContact } from \"../../redux/contacts/items/items-operations\";\n\nconst INITIAL_STATE = {\n  name: \"\",\n  number: \"\",\n};\n\nclass ContactForm extends Component {\n  state = {\n    ...INITIAL_STATE,\n  };\n\n  nameId = nanoid();\n  numberId = nanoid();\n\n  reset = () => this.setState({ ...INITIAL_STATE });\n\n  onInputHandler = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n  addContact = (contactData) => {\n    this.props.addContact(contactData);\n    info({ text: `Contact successfully added`, delay: 700 });\n  };\n\n  onSubmitHandler = (event) => {\n    event.preventDefault();\n    const { contacts } = this.props;\n    if (!contacts.find((item) => item.name === this.state.name)) {\n      const contactData = { name: this.state.name, number: this.state.number, id: nanoid() };\n      this.addContact(contactData);\n      this.reset();\n    } else {\n      info({ text: `${this.state.name} is already in contacts.`, delay: 700 });\n    }\n  };\n\n  render() {\n    return (\n      <form className=\"form\" onSubmit={this.onSubmitHandler}>\n        <label className=\"form__title\" htmlFor={this.nameId}>\n          <h3 className=\"phonebook__headline\">Name</h3>\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            id={this.nameId}\n            value={this.state.name}\n            onChange={this.onInputHandler}\n          />\n        </label>\n        <label className=\"form__title\" htmlFor={this.numberId}>\n          <h3 className=\"phonebook__headline\">Number</h3>\n          <input\n            className=\"form__input\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            id={this.numberId}\n            value={this.state.number}\n            onChange={this.onInputHandler}\n          />\n        </label>\n        <button className=\"form__submit\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\nconst mapStateToProps = ({ contacts }) => ({\n  contacts: contacts.items,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addContact: (contact) => dispatch(addContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n\nContactForm.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  addContact: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport \"./ContactItem.scss\";\nimport PropTypes from \"prop-types\";\n\nexport default function ContactItem({ name, number, deleteContact }) {\n  return (\n    <li className=\"list__item\">\n      <p className=\"list__text\">\n        <span>{name} :</span> {number}\n      </p>\n      <button className=\"list__btn\" onClick={deleteContact} type=\"button\">\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};","import { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  addContactRequest,\n  addContactError,\n  addContactSuccess,\n  deleteContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  getContactError,\n  getContactRequest,\n  getContactSuccess,\n} from \"./items-actions\";\n\nexport const items = createReducer([], {\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) => [\n    ...state.filter((element) => element.id !== payload),\n  ],\n  [getContactSuccess]: (_, { payload }) => payload,\n});\n\nexport const loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactError]: () => false,\n  [addContactSuccess]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactError]: () => false,\n  [deleteContactSuccess]: () => false,\n  [getContactRequest]: () => true,\n  [getContactError]: () => false,\n  [getContactSuccess]: () => false,\n});\n\nexport const error = createReducer(\"\", {\n  [addContactRequest]: () => \"\",\n  [addContactError]: () => \"Opps, we have some troubles with adding contact\",\n  [addContactSuccess]: () => \"\",\n  [deleteContactRequest]: () => \"\",\n  [deleteContactError]: () => \"Opps, we have some troubles with deleting contact\",\n  [deleteContactSuccess]: () => \"\",\n  [getContactRequest]: () => \"\",\n  [getContactError]: () => \"Opps, we have some troubles with loading contacts\",\n  [getContactSuccess]: () => \"\",\n});\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const changeFilter = createAction(\"contacts/filter\");\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { changeFilter } from \"./filter-actions\";\n\nexport const filter = createReducer(\"\", {\n  [changeFilter.type]: (_, { payload }) => payload,\n});\n","import { combineReducers } from \"@reduxjs/toolkit\";\nimport { items, loading, error } from \"./items/items-reducers\";\nimport { filter } from \"./filter/filter-reducers\";\n\nexport const contacts = combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n\nexport const filterContacts = (query, contacts) =>\n  contacts.filter((element) =>\n    element.name.toLocaleLowerCase().includes(query.toLocaleLowerCase())\n  );\n","import React, { useEffect } from \"react\";\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteContact, getContact } from \"../../redux/contacts/items/items-operations\";\nimport { filterContacts } from \"../../redux/contacts/contacts-reducers\";\n\nfunction ContactList({ contacts, deleteContact, getContactList }) {\n  useEffect(() => getContactList(), [getContactList]);\n\n  return (\n    <ul className=\"list\">\n      {contacts.map((item) => (\n        <ContactItem\n          deleteContact={() => deleteContact(item.id)}\n          key={item.id}\n          name={item.name}\n          number={item.number}\n        />\n      ))}\n    </ul>\n  );\n}\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ contacts }) => ({\n  contacts: filterContacts(contacts.filter, contacts.items),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteContact: (contact) => dispatch(deleteContact(contact)),\n  getContactList: () => dispatch(getContact()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./Filter.scss\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { changeFilter } from \"../../redux/contacts/filter/filter-actions\";\n\nconst filterId = nanoid();\n\nfunction Filter({ onChange, value }) {\n  return (\n    <div className=\"filter\">\n      <h3 className=\"phonebook__headline\">Find contact by name</h3>\n      <label className=\"filter__title\" htmlFor={filterId}>\n        <input\n          value={value}\n          onChange={onChange}\n          className=\"filter__input\"\n          type=\"text\"\n          name=\"filter\"\n          id={filterId}\n        />\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = ({ contacts }) => ({\n  value: contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: ({ target }) => dispatch(changeFilter(target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport \"./Message.scss\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { filterContacts } from \"../../redux/contacts/contacts-reducers\";\n\nfunction Message({ filter,filteredContacts }) {\n  return (\n    filter && (\n      <h3 className=\"message__headline\">\n        {filteredContacts.length === 0 ? \"Opps, no contacts found\" : \"Filtered results:\"}\n      </h3>\n    )\n  );\n}\n\nconst mapStateToProps = ({ contacts }) => ({\n  filter: contacts.filter,\n  filteredContacts: filterContacts(contacts.filter, contacts.items),\n});\n\nexport default connect(mapStateToProps, null)(Message);\n\nMessage.propTypes = {\n  filter: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport \"./Modal.scss\";\nimport { createPortal } from \"react-dom\";\n\nconst modalRef = document.querySelector(\"#root-modal\");\n\nconst Modal = (props) => {\n  return createPortal(\n    <div className=\"Overlay\">\n      <div className=\"Modal\">{props.children}</div>\n    </div>,\n    modalRef\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport { BallTriangle } from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport \"./Loader.scss\";\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n      <BallTriangle height=\"100\" width=\"100\" color=\"#4778ff\" arialLabel=\"Loading...\" />\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport Modal from './Modal/Modal';\nimport Loader from '../Loader/Loader';\n\nconst LoaderModal = () => {\n  return (\n   <>\n      <Modal>\n        <Loader />\n      </Modal>\n   </>\n  );\n}\n\nexport default LoaderModal;","import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport Message from \"./components/Message/Message\";\nimport LoaderModal from \"./components/LoaderModal/LoaderModal\";\n\nimport \"./styles/App.scss\";\n\nclass App extends Component {\n  render() {\n    const { error, loading } = this.props;\n    return (\n      <>\n        {loading && <LoaderModal />}\n        {error && <h2 className=\"error\">{error}</h2>}\n        <div className=\"phonebook__wrapper\">\n          <div className=\"form-wrapper\">\n            <h1 className=\"headline\">Phonebook</h1>\n            <h2>Add new contact</h2>\n            <ContactForm />\n          </div>\n          <div className=\"list-wrapper\">\n            <h2>Contacts</h2>\n            <Filter />\n            <Message />\n\n            <ContactList />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ contacts }) => ({\n  loading: contacts.loading,\n  error: contacts.error,\n});\n\nexport default connect(mapStateToProps, null)(App);\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport { contacts} from \"./contacts/contacts-reducers\";\n\nconst rootReducer = combineReducers({ contacts });\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App.jsx\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}